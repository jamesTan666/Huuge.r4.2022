version: "3.8"

volumes:
  rabbitmq_data:
  pgdata:
  kongadata:

networks:
  kong-net:
    driver: bridge

services:
  kong-database:
    image: postgres:9.6
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    image: kong:2.0.4
    command: "kong migrations bootstrap"
    restart: on-failure
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:2.0.4
    restart: always
    networks:
      - kong-net
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: password
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
      - order
    ports:
      - "8000:8000"

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga
    restart: always
    networks:
        - kong-net
    environment:
      DB_ADAPTER: postgres
      DB_HOST: kong-database
      DB_USER: kong
      DB_PASSWORD: password
      DB_DATABASE: konga_db
    depends_on:
      - kong
    ports:
      - "1337:1337"
    volumes:
      - kongadata:/app/kongadata
  #################################
  # All: The  microservice
  #################################
  payment:
    build:
      context: ./paymentImage/
      dockerfile: Dockerfile
    image: gym_delivery/payment:1.0
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/gym_payment
      PYTHONUNBUFFERED: 1
    ports:
      - "5005:5005"

  order:
    build:
      context: ./orderImage/
      dockerfile: Dockerfile
    image: gym_delivery/order:1.0
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/gym_orders
      PYTHONUNBUFFERED: 1
    ports:
      - "5001:5001"

  delivery:
    build:
      context: ./delivery/
      dockerfile: Dockerfile
    image: gym_delivery/delivery:1.0
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/gym_delivery
      PYTHONUNBUFFERED: 1
    ports:
      - "5002:5002"

  app:
    build:
      context: ./authentication/
      dockerfile: Dockerfile
    image: gym_delivery/authentication:1.0
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/gym_user
      PYTHONUNBUFFERED: 1
    ports:
      - "5003:5003"

  inventory:
    build:
      context: ./inventory/
      dockerfile: Dockerfile
    image: gym_delivery/inventory:1.0
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/gym_inventory
      PYTHONUNBUFFERED: 1
    ports:
      - "5006:5006"

  cart:
    build:
      context: ./place_order/
      dockerfile: cart.Dockerfile
    image: gym_delivery/cart:1.0
    restart: always
    environment:
      dbURL: mysql+mysqlconnector://is213@host.docker.internal:3306/gym_cart
      PYTHONUNBUFFERED: 1
    ports:
      - "5007:5007"

  ####################################
  # RabbitMQ: The messaging broker
  ####################################
  rabbitmq:
    image: rabbitmq:3-management
    hostname: esd-rabbit
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  #################################################
  # Activity Log: The Activity Log microservice
  #################################################
  activity_log:
    build:
      context: ./place_order/
      dockerfile: activity_log.Dockerfile
    image: project/activity_log:1.0
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  ###################################
  # Error: The Error microservice
  ###################################
  error:
    build:
      context: ./place_order/
      dockerfile: error.Dockerfile
    image: project/error:1.0
    restart: always
    depends_on:
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      PYTHONUNBUFFERED: 1

  ###############################################
  # Place Order: The Place Order microservice
  ###############################################
  place_order:
    build:
      context: ./place_order/
      dockerfile: place_order.Dockerfile
    image: gym_delivery/place_order:1.0
    restart: always
    depends_on:
      - order
      - delivery
      - payment
      - activity_log
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      order_URL: http://order:5001/order
      delivery_URL: http://delivery:5002/delivery
      payment_URL : http://payment:5005/payment
      inventory_URL : http://inventory:5006/inventory
      PYTHONUNBUFFERED: 1
    ports:
      - "5100:5100"

  process_delivery:
    build:
      context: ./process_delivery/
      dockerfile: process_delivery.Dockerfile
    image: gym_delivery/process_delivery:1.0
    restart: always
    depends_on:
      - order
      - delivery
      - payment
      - activity_log
      - error
      - rabbitmq
    environment:
      rabbit_host: rabbitmq
      rabbit_port: 5672
      order_URL: http://order:5001/order
      delivery_URL: http://delivery:5002/delivery
      payment_URL : http://payment:5000/payment
      inventory_URL : http://inventory:5006/inventory
      PYTHONUNBUFFERED: 1
    ports:
      - "5200:5200"
